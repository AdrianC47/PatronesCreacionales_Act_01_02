/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.ups.view;

import ec.edu.ups.controller.ControladorArchivoSistema;
import ec.edu.ups.model.ArchivoSistema;
import ec.edu.ups.model.Carpeta;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author adrian
 */
public class VistaArchivoSistema extends javax.swing.JFrame {

    
    private ControladorArchivoSistema controladorArchivoSistema;
    
    
    public VistaArchivoSistema() {
        List<ArchivoSistema> sistemaArchivos = new ArrayList<>();
        this.controladorArchivoSistema = new ControladorArchivoSistema(sistemaArchivos);
        initComponents();
    }
    
       private void agregarCarpeta() {
 
//        if (carpetaPadre.isEmpty()) {
//            controladorArchivoSistema.agregarCarpeta(nombreCarpeta, null);
//        } else {
//            controladorArchivoSistema.agregarCarpeta(nombreCarpeta, carpetaPadre);
//        }
       }
       private void agregarArchivo() {
 
        System.out.print("Ingrese el nombre de la carpeta padre (dejar vacío si es raíz): ");
//         if (carpetaPadre.isEmpty()) {
//            controladorArchivoSistema.agregarArchivo(nombreArchivo, tamano, null);
//        } else {
//            controladorArchivoSistema.agregarArchivo(nombreArchivo, tamano, carpetaPadre);
//        }
       }
       
              public void mostrarElemento(ArchivoSistema elemento, int nivel) {
        String indentacion = " ".repeat(nivel * 2);
        System.out.println(indentacion + elemento.getNombre() + " (" + elemento.getTamano() + " KB)");

        if (elemento instanceof Carpeta) {
            for (ArchivoSistema subElemento : ((Carpeta) elemento).getElementos()) {
                mostrarElemento(subElemento, nivel + 1);
            }
        }
    }
       
       public void mostrarJerarquia(List<ArchivoSistema> elementos) {
        for (ArchivoSistema elemento : elementos) {
            mostrarElemento(elemento, 0);
        }
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
